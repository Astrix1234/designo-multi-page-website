{"version":3,"file":"static/js/281.97d9f766.chunk.js","mappings":"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","sources":["Icons/CircleOne/CircleOne.tsx","components/LocationsAll/Locations/Locations.styles.ts","utils/dataLocations.ts","components/LocationsAll/Maps/Maps.styles.ts","components/LocationsAll/Maps/Maps.tsx","components/LocationsAll/Locations/Locations.tsx","pages/LocationsPage/LocationsPage.tsx"],"sourcesContent":["export const CircleOne = () => {\n  return (\n    <svg\n      width=\"292\"\n      height=\"292\"\n      viewBox=\"0 0 292 292\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        opacity=\"0.06\"\n        cx=\"146\"\n        cy=\"146\"\n        r=\"146\"\n        transform=\"matrix(-1 0 0 1 292 0)\"\n        fill=\"url(#paint0_linear_0_1007)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_0_1007\"\n          x1=\"0\"\n          y1=\"292\"\n          x2=\"292\"\n          y2=\"292\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#5D0202\" stopOpacity=\"0.01\" />\n          <stop offset=\"1\" stopColor=\"#5D0202\" stopOpacity=\"0.497569\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n};\n","import styled from 'styled-components';\nimport { media } from '../../../stylesheets/media';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  padding-bottom: 310px;\n\n  ${media.tablet`\n    max-width: 768px;\n   padding: 0 40px 384px 39px;\n    gap: 120px;\n  `}\n\n  ${media.desktop`\n    max-width: 1440px;\n    padding: 0 164px 380px 165px;\n    gap: 32px;\n  `}\n`;\n\nexport const ContentContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  ${media.tablet`\n        gap:24px;\n    `}\n\n  ${media.desktop`\n        flex-direction: row;\n        gap: 30px;\n\n        &.content {\n            flex-direction: row-reverse;\n        }\n    `}\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;\n  background-color: var(--light);\n  position: relative;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 394px;\n  text-align: center;\n  color: var(--dark-grey);\n  font-size: 15px;\n  line-height: 25px;\n\n  & h4 {\n    font-size: 32px;\n    line-height: 36px;\n    font-weight: 500;\n    margin-top: 80px;\n    color: var(--peach);\n  }\n\n  & .contacts {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n  }\n\n  & div div {\n    margin-top: 24px;\n    display: flex;\n    flex-direction: column;\n\n    & p:first-of-type {\n      font-weight: 700;\n    }\n  }\n\n  ${media.tablet`\n    border-radius: 20px;\n    height: 326px;\n    align-items: flex-start;\n    text-align: left;\n    padding-left: 70px;\n    justify-content: center;\n    font-size: 16px;\n  line-height: 26px;\n \n    \n  & h4 {\n    font-size: 40px;\n    line-height: 48px;\n    font-weight: 500;\n    margin-top: 0;\n    color: var(--peach);\n  }\n\n  & .contacts {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n     margin-top: 24px;\n      gap: 130px;\n  }\n\n  & div div {\n    margin-top: 0;\n\n    & p:first-of-type {\n      font-weight: 700;\n    }\n  }\n  `}\n\n  ${media.desktop`\n    height: 350px;\n\n     & .contacts {\n      gap: 150px;\n  }\n  `}\n`;\n\nexport const CircleContainer = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 102px;\n\n  ${media.tablet`\n    left: 0;\n    bottom: 292px;\n  `}\n`;\n\nexport const Circle180Container = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: -190px;\n  transform: rotate(180deg);\n\n  ${media.tablet`\n     left: 0;\n  bottom: 0;\n  `}\n\n  ${media.desktop`\n     left: 0;\n  bottom: 0;\n  `}\n`;\n\nexport const Circle90Container = styled.div`\n  position: absolute;\n  left: 292px;\n  bottom: -190px;\n  transform: rotate(270deg);\n\n  ${media.tablet`\n     left: 292px;\n  bottom: 0;\n  `}\n\n  ${media.desktop`\n    left: 292px;\n  bottom: 0;\n  `}\n`;\n","export const dataLocations = [\n  {\n    country: 'Canada',\n    office: 'Designo Central Office',\n    street: '3886 Wellington Street',\n    city: 'Toronto, Ontario M9C 3J5',\n    contact: 'Contact',\n    phone: 'P : +1 253-863-8967',\n    email: 'M : contact@designo.co',\n    position: [43.65107, -79.347015] as [number, number],\n  },\n  {\n    country: 'Australia',\n    office: 'Designo AU Office',\n    street: '19 Balonne Street',\n    city: 'New South Wales 2443',\n    contact: 'Contact',\n    phone: 'P : (02) 6720 9092',\n    email: 'M : contact@designo.au',\n    position: [-31.253218, 146.921099] as [number, number],\n  },\n  {\n    country: 'United Kingdom',\n    office: 'Designo UK Office',\n    street: '13 Colorado Way',\n    city: 'Rhyd-y-fro SA8 9GA',\n    contact: 'Contact',\n    phone: 'P : 078 3115 1400',\n    email: 'M : contact@designo.uk',\n    position: [51.509865, -0.118092] as [number, number],\n  },\n];\n","import styled from 'styled-components';\nimport { media } from '../../../stylesheets/media';\n\nexport const MapWrapper = styled.div`\n  width: 100%;\n  height: 320px;\n  overflow: hidden;\n\n  ${media.tablet`\n    border-radius: 20px;\n    height: 326px;\n  `}\n\n  ${media.desktop`\n    max-width: 350px;\n    height: 350px;\n  `}\n`;\n","import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { LatLngExpression } from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { MapWrapper } from './Maps.styles';\n\ninterface MapsProps {\n  position: LatLngExpression;\n}\n\nconst markerIcon = new L.Icon({\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n});\n\nexport const Maps: React.FC<MapsProps> = ({ position }) => {\n  return (\n    <MapWrapper>\n      <MapContainer\n        center={position}\n        zoom={5}\n        scrollWheelZoom={false}\n        style={{ height: '100%', width: '100%' }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position} icon={markerIcon}>\n          <Popup>{position.toString()}</Popup>\n        </Marker>\n      </MapContainer>\n    </MapWrapper>\n  );\n};\n","import {\n  Container,\n  ContentContainer,\n  TextContainer,\n  CircleContainer,\n  Circle180Container,\n  Circle90Container,\n} from './Locations.styles';\nimport { dataLocations } from '../../../utils/dataLocations';\nimport { Maps } from '../Maps/Maps';\nimport { useMediaQuery } from 'react-responsive';\nimport { CircleOne } from '../../../Icons/CircleOne/CircleOne';\n\nexport const Locations = () => {\n  const isDesktop = useMediaQuery({ query: '(min-width: 1440px)' });\n\n  return (\n    <Container>\n      {dataLocations.map((location, index) => (\n        <ContentContainer\n          key={index}\n          className={index % 2 === 0 ? 'content' : ''}\n        >\n          <Maps position={location.position} />\n\n          <TextContainer>\n            <h4>{location.country}</h4>\n            <div className=\"contacts\">\n              <div>\n                <p>{location.office}</p>\n                <p>{location.street}</p>\n                <p>{location.city}</p>\n              </div>\n              <div>\n                <p>{location.contact}</p>\n                <p>{location.phone}</p>\n                <p>{location.email}</p>\n              </div>\n            </div>\n            {!isDesktop && (\n              <CircleContainer>\n                <CircleOne />\n              </CircleContainer>\n            )}\n            <Circle180Container>\n              <CircleOne />\n            </Circle180Container>\n            <Circle90Container>\n              <CircleOne />\n            </Circle90Container>\n          </TextContainer>\n        </ContentContainer>\n      ))}\n    </Container>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { Locations } from '../../components/LocationsAll/Locations/Locations';\n\nexport default function LocationsPage() {\n  return (\n    <div>\n      <Helmet>\n        <title>Designo-our-locations</title>\n      </Helmet>\n      <Locations />\n    </div>\n  );\n}\n"],"names":["CircleOne","_jsxs","width","height","viewBox","fill","xmlns","children","_jsx","opacity","cx","cy","r","transform","id","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","Container","styled","div","_templateObject","_taggedTemplateLiteral","media","tablet","_templateObject2","desktop","_templateObject3","ContentContainer","_templateObject4","_templateObject5","_templateObject6","TextContainer","_templateObject7","_templateObject8","_templateObject9","CircleContainer","_templateObject10","_templateObject11","Circle180Container","_templateObject12","_templateObject13","_templateObject14","Circle90Container","_templateObject15","_templateObject16","_templateObject17","dataLocations","country","office","street","city","contact","phone","email","position","MapWrapper","markerIcon","L","iconUrl","require","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","Maps","_ref","MapContainer","center","zoom","scrollWheelZoom","style","TileLayer","attribution","url","Marker","icon","Popup","toString","Locations","isDesktop","useMediaQuery","query","map","location","index","className","LocationsPage","Helmet"],"sourceRoot":""}